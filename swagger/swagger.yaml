openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
security:
  - bearerAuth: []
paths:
  /facturation/v1/prodtuit/create:
    post:
      tags:
        - produit-controller
      operationId: save
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProduitDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProduitDto'
  /facturation/v1/facture/create:
    post:
      tags:
        - facture-controller
      operationId: save_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FactureDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FactureDto'
  /facturation/v1/client/create:
    post:
      tags:
        - client-controller
      operationId: save_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientDto'
  /facturation/v1/categorie/create:
    post:
      tags:
        - categorie-controller
      operationId: save_3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategorieDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategorieDto'
  /facturation/auth/inscription:
    post:
      tags:
        - authentication-controller
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
  /facturation/auth/authenticate:
    post:
      tags:
        - authentication-controller
      operationId: authenticate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
  /facturation/v1/prodtuitid/{idProdtuit}:
    get:
      tags:
        - produit-controller
      operationId: findById
      parameters:
        - name: idProdtuit
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProduitDto'
  /facturation/v1/prodtuit/allpaginated:
    get:
      tags:
        - produit-controller
      operationId: findAllPaginated
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageProduitDto'
  /facturation/v1/prodtuit/all:
    get:
      tags:
        - produit-controller
      operationId: findAll
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProduitDto'
  /facturation/v1/facture/{idFacture}:
    get:
      tags:
        - facture-controller
      operationId: findById_1
      parameters:
        - name: idFacture
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FactureDto'
  /facturation/v1/facture/all:
    get:
      tags:
        - facture-controller
      operationId: findAll_1
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageFactureDto'
  /facturation/v1/client/id/{idClient}:
    get:
      tags:
        - client-controller
      operationId: findById_2
      parameters:
        - name: idClient
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientDto'
  /facturation/v1/client/allpaginated:
    get:
      tags:
        - client-controller
      operationId: findAllPaginated_1
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageClientDto'
  /facturation/v1/client/all:
    get:
      tags:
        - client-controller
      operationId: findAll_2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientDto'
  /facturation/v1/categorie/id/{idCat}:
    get:
      tags:
        - categorie-controller
      operationId: findById_3
      parameters:
        - name: idCat
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategorieDto'
  /facturation/v1/categorie/allpaginated:
    get:
      tags:
        - categorie-controller
      operationId: findAllPaginated_2
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageCategorieDto'
  /facturation/v1/categorie/all:
    get:
      tags:
        - categorie-controller
      operationId: findAll_3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategorieDto'
  /facturation/v1/prodtuit/delete/{idProdtuit}:
    delete:
      tags:
        - produit-controller
      operationId: delete
      parameters:
        - name: idProdtuit
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /facturation/v1/client/delete/{idClient}:
    delete:
      tags:
        - client-controller
      operationId: delete_1
      parameters:
        - name: idClient
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /facturation/v1/categorie/delete/{idCat}:
    delete:
      tags:
        - categorie-controller
      operationId: delete_2
      parameters:
        - name: idCat
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
components:
  schemas:
    CategorieDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nom:
          type: string
        description:
          type: string
    ProduitDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nom:
          type: string
        description:
          type: string
        code:
          type: string
        prix:
          type: number
          format: double
        stock:
          type: integer
          format: int32
        category:
          $ref: '#/components/schemas/CategorieDto'
        etatRemise:
          type: boolean
    ClientDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nom:
          type: string
        prenom:
          type: string
        adresse:
          type: string
        tel:
          type: integer
          format: int32
        code:
          type: string
        nomCommercial:
          type: string
        remise:
          type: integer
          format: int32
    FactureDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        tauxTVA:
          type: integer
          format: int32
        montantTTC:
          type: number
          format: double
        montantHt:
          type: number
          format: double
        client:
          $ref: '#/components/schemas/ClientDto'
        reference:
          type: string
        timbreFiscale:
          type: number
          format: double
        dateFacture:
          type: string
          format: date
        lignesFacture:
          type: array
          items:
            $ref: '#/components/schemas/LigneFactureDto'
    LigneFactureDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        facture:
          $ref: '#/components/schemas/FactureDto'
        produit:
          $ref: '#/components/schemas/ProduitDto'
        quantite:
          type: integer
          format: int32
        prixUnitaire:
          type: number
          format: double
        remise:
          type: integer
          format: int32
        prixTotal:
          type: number
          format: double
    RegisterRequest:
      type: object
      properties:
        firstname:
          type: string
        lastname:
          type: string
        email:
          type: string
        password:
          type: string
    AuthenticationResponse:
      type: object
      properties:
        token:
          type: string
    AuthenticationRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    PageProduitDto:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/ProduitDto'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/SortObject'
        pageSize:
          type: integer
          format: int32
        pageNumber:
          type: integer
          format: int32
        paged:
          type: boolean
        unpaged:
          type: boolean
    SortObject:
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
    PageFactureDto:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/FactureDto'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageClientDto:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/ClientDto'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageCategorieDto:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/CategorieDto'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
